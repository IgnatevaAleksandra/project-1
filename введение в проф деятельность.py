import datetime
import time 
import threading
print("Здравствуйте! Введите наименование вашего продукта.")
product = input()
print("Если у вас есть дата окончания срока годности введите 1, если у вас есть количество месяцев после вскрытия товара введите 2.")
variant = int(input())
segodnya = datetime.datetime.today() #сегодняшняя дата
if variant == 1: #при первом варианте пользователь вводит дату окончания срока годности
    print("Введите дату в формате дд.мм.гггг")
    print("Введите день")
    day = int(input())
    print("Введите месяц")
    month = int(input())
    print("Введите год")
    year = int(input())
    data = datetime.datetime(year, month, day)#дата записывается в одну переменную
    razn = data - segodnya #переменная x отвечает за временную разницу между датами 
    sec = razn.total_seconds() #выражаем разницу в секундах
    print("Осталось", sec, "секунд.")
    print(data.strftime("%d. %m. %Y"),"Я напомню вам, что следует утилизировать", product, ".")
    def g():
        print("Пора выкинуть", product)
    timer = threading.Timer(sec, g)#запускаем секундный отсчет к нужной дате
    timer.start()
elif variant == 2: #при втором варианте пользователь вводит количество месяцев до окончания срока годности
    print("Введите количество месяцев")
    month = int(input())
    if month + segodnya.month < 12: #если сумма текущего месяца и введенного пользователем месяца меньше 12
        data = segodnya.replace(month = segodnya.month + month)#заменяем месяц в сегодняшней дате на сумму месяцев (указано выше)
        razn = data - segodnya#переменная x отвечает за временную разницу между датами 
        sec = razn.total_seconds() #выражаем разницу в секундах
        print("Осталось", sec, "секунд.")
        print(data.strftime("%d. %m. %Y"),"Я напомню вам, что следует утилизировать", product, ".")
        def g():
            print("Пора выкинуть", product)
        timer = threading.Timer(sec, g)#запускаем секундный отсчет к нужной дате
        timer.start()
    else: #если сумма месяцев больше или равна 12
        month1 = int(month % 12)#находм остаток от деления на 12 от введенного пользователем кол-ва месяцев (сколько месяцев останется если убрать полные года)
        year1 = int((month1 + segodnya.month) // 12)#находим целую часть от деления на 12 от суммы первого остатка и текущего месяца(сколько полных лет в этих месяцах)
        year2 = int(month // 12)#находим целую чать от деления на 12 от введеного пользователем количества месяцев (сколько полных лет в этих месяцах)
        if month1 + segodnya.month < 12:#если сумма первого остатка(оставшихся от деления на 12 месяцев) и текущего месяца меньше 12
            data = segodnya.replace(month = segodnya.month + month1)#заменяем месяц в сегодняшней дате на сумму месяцев (указано выше)
            data = data.replace(year = data.year + year1 + year2)#к текуцему году прибавляем целые чати от деления на 12 (кол-во полных лет)
            razn = data - segodnya#переменная x отвечает за временную разницу между датами
            sec = razn.total_seconds() #выражаем разницу в секундах
            print("Осталось", sec, "секунд.")
            print(data.strftime("%d. %m. %Y"),"Я напомню вам, что следует утилизировать", product, ".")
            def g():
                print("Пора выкинуть", product)
            timer = threading.Timer(sec, g)#запускаем секундный отсчет к нужной дате
            timer.start()
        else:#если сумма первого остатка(оставшихся от деления на 12 месяцев) и текущего месяца больше или равна 12
            month2 = 12 - month1 #находим сколько месяцев останется в году если вычесть первый остаток (оставшиеся месяцы если убрать полные года) 
            data = segodnya.replace(month = segodnya.month - month2)#из текущего кол-ва месяцев вычитаем "остаток5" (см выше)
            data = data.replace(year = data.year + year1 + year2)#к текуцему году прибавляем целые чати от деления на 12 (кол-во полных лет)
            razn = data - segodnya#переменная x отвечает за временную разницу между датами
            sec = razn.total_seconds() #выражаем разницу в секундах
            print("Осталось", sec, "секунд.")
            print(data.strftime("%d. %m. %Y"),"Я напомню вам, что следует утилизировать", product, ".")
            def g():
                print("Пора выкинуть", product)
            timer = threading.Timer(sec, g)#запускаем секундный отсчет к нужной дате
            timer.start()

else:#если выбрали ни первый, ни второй варианты
    print("ОШИБКА")
time.sleep(200)#программа закроется по истечению 200 секунд




















